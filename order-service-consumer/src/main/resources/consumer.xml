<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:dubbo="http://dubbo.apache.org/schema/dubbo"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
       http://dubbo.apache.org/schema/dubbo http://dubbo.apache.org/schema/dubbo/dubbo.xsd">

    <context:component-scan base-package="com.xlj.service.impl"></context:component-scan>

    <dubbo:application name="order-service-consumer"></dubbo:application>

    <dubbo:registry address="zookeeper://127.0.0.1:2181"></dubbo:registry>

    <!--    声明需要调用的远程服务接口，生成远程代理服务-->
    <!--    超时时间timeout：设置调用服务端响应的超时时间，默认为1000ms，方法级别>引用级别>统一配置，消费者>提供者-->
    <!--    重试次数retries：一般与timeout配合使用，当调用服务失败时，再接着调用，不包含第一次（设置为2，一共执行3次）-->
    <!--    幂等（设置重试次数）【查询、删除、修改】，非幂等（不能设置重试次数）【新增】-->
    <!--    stub本地存根：在消费者调用服务时，先调用本地存根，本地存根做处理后返回数据-->
    <dubbo:reference interface="com.xlj.service.UserService" id="userService"
                     timeout="2000" retries="2" version="*" stub="com.xlj.service.UserServiceStub">
        <!--    <dubbo:method name="getUserAddressList" timeout="3000"></dubbo:method>-->
    </dubbo:reference>

    <!--    dubbo统一配置消费者，check启动时检查所有消费者所调用的服务是否存在注册中心-->
    <dubbo:consumer check="false"></dubbo:consumer>

    <dubbo:monitor protocol="registry"></dubbo:monitor>

</beans>